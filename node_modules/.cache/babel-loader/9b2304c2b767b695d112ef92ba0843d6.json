{"ast":null,"code":"var _jsxFileName = \"/Users/pmsheijmans/Projecten/fietslabyrinth/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport axios from 'axios'; // import XMLParser from 'react-xml-parser';\n\nimport React, { useState } from 'react';\nimport XMLData from './languages_all.xml';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // Read XML file and store it as a string\n  const [XMLtext, setXMLtext] = useState(\"\");\n  axios.get(XMLData, {\n    \"Content-Type\": \"application/xml; charset=utf-8\"\n  }).then(response => {\n    setXMLtext(response.data);\n  }); // Define variables/react hooks\n\n  const [clicked, setClicked] = useState(false);\n  const [numberOfSeconds, setNumberOfSeconds] = useState(0);\n  const [textVisibility, setVisibility] = useState(true); // Functions\n\n  function getTranslation(XMLtext, element, language) {\n    // WIP: Code that returns the correct element based on the inputted language.\n    return \"Fin de la ruta\";\n  }\n\n  function handleChange(e) {\n    setNumberOfSeconds(e.target.value);\n  }\n\n  function handleClick() {\n    setClicked(true); // setNumberOfSeconds(e.target.value);\n\n    console.log(numberOfSeconds);\n    timeout(numberOfSeconds * 1000); //for 1 sec delay\n\n    setVisibility(false);\n  }\n\n  function timeout(delay) {\n    return new Promise(res => setTimeout(res, delay));\n  } // // const xmlStr = '<a id=\"a\"><b id=\"b\">hey!</b></a>';\n  // const parser = new DOMParser();\n  // const dom = parser.parseFromString(XMLtext, \"application/xml\");\n  // // print the name of the root element or error message\n  // console.log(dom.getElementsByTagName('endTour'));\n  // Get Spanish translation from string\n\n\n  getTranslation(XMLtext, \"endTour\", \"sp\"); // console.log(XMLtext);\n  // e => setNumberOfSeconds(e.target.value)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: numberOfSeconds,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Click me to see the Spanish translation!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), clicked && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: textVisibility ? 'visible' : 'invisible',\n        children: getTranslation(XMLtext, \"endTour\", \"sp\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"QdYgLHaxHVtbFK4MFilpkb9LD9c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/pmsheijmans/Projecten/fietslabyrinth/src/App.js"],"names":["axios","React","useState","XMLData","App","XMLtext","setXMLtext","get","then","response","data","clicked","setClicked","numberOfSeconds","setNumberOfSeconds","textVisibility","setVisibility","getTranslation","element","language","handleChange","e","target","value","handleClick","console","log","timeout","delay","Promise","res","setTimeout"],"mappings":";;;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAGA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,qBAApB;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AAEb;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;AACAF,EAAAA,KAAK,CAACO,GAAN,CAAUJ,OAAV,EAAmB;AACjB,oBAAgB;AADC,GAAnB,EAGGK,IAHH,CAGSC,QAAD,IAAc;AAClBH,IAAAA,UAAU,CAACG,QAAQ,CAACC,IAAV,CAAV;AACD,GALH,EAJa,CAWb;;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACW,eAAD,EAAkBC,kBAAlB,IAAwCZ,QAAQ,CAAC,CAAD,CAAtD;AACA,QAAM,CAACa,cAAD,EAAiBC,aAAjB,IAAkCd,QAAQ,CAAC,IAAD,CAAhD,CAda,CAiBb;;AACA,WAASe,cAAT,CAAwBZ,OAAxB,EAAiCa,OAAjC,EAA0CC,QAA1C,EAAoD;AAClD;AACA,WAAO,gBAAP;AACD;;AAED,WAASC,YAAT,CAAsBC,CAAtB,EAAyB;AACvBP,IAAAA,kBAAkB,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB;AACD;;AAED,WAASC,WAAT,GAAuB;AACrBZ,IAAAA,UAAU,CAAC,IAAD,CAAV,CADqB,CAErB;;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAYb,eAAZ;AACAc,IAAAA,OAAO,CAACd,eAAe,GAAG,IAAnB,CAAP,CAJqB,CAIY;;AACjCG,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD;;AAED,WAASW,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,WAAO,IAAIC,OAAJ,CAAYC,GAAG,IAAIC,UAAU,CAACD,GAAD,EAAMF,KAAN,CAA7B,CAAP;AACD,GArCY,CAyCb;AACA;AACA;AACA;AACA;AAIA;;;AACAX,EAAAA,cAAc,CAACZ,OAAD,EAAU,SAAV,EAAqB,IAArB,CAAd,CAlDa,CAmDb;AAGA;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAO,QAAA,KAAK,EAAEQ,eAAd;AAA+B,QAAA,QAAQ,EAAEO;AAAzC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAEI,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGb,OAAO,iBACN;AAAM,QAAA,SAAS,EAAEI,cAAc,GAAG,SAAH,GAAe,WAA9C;AAAA,kBAA4DE,cAAc,CAACZ,OAAD,EAAU,SAAV,EAAqB,IAArB;AAA1E;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAjEQD,G;;KAAAA,G;AAqET,eAAeA,GAAf","sourcesContent":["\nimport './App.css';\nimport axios from 'axios';\n// import XMLParser from 'react-xml-parser';\n\n\nimport React, { useState } from 'react';\nimport XMLData from './languages_all.xml';\n\n\nfunction App() {\n\n  // Read XML file and store it as a string\n  const [XMLtext, setXMLtext] = useState(\"\");\n  axios.get(XMLData, {\n    \"Content-Type\": \"application/xml; charset=utf-8\"\n  })\n    .then((response) => {\n      setXMLtext(response.data)\n    });\n\n  // Define variables/react hooks\n  const [clicked, setClicked] = useState(false);\n  const [numberOfSeconds, setNumberOfSeconds] = useState(0);\n  const [textVisibility, setVisibility] = useState(true);\n\n\n  // Functions\n  function getTranslation(XMLtext, element, language) {\n    // WIP: Code that returns the correct element based on the inputted language.\n    return \"Fin de la ruta\";\n  }\n\n  function handleChange(e) {\n    setNumberOfSeconds(e.target.value);\n  }\n\n  function handleClick() {\n    setClicked(true)\n    // setNumberOfSeconds(e.target.value);\n    console.log(numberOfSeconds);\n    timeout(numberOfSeconds * 1000); //for 1 sec delay\n    setVisibility(false);\n  }\n\n  function timeout(delay) {\n    return new Promise(res => setTimeout(res, delay));\n  }\n\n\n\n  // // const xmlStr = '<a id=\"a\"><b id=\"b\">hey!</b></a>';\n  // const parser = new DOMParser();\n  // const dom = parser.parseFromString(XMLtext, \"application/xml\");\n  // // print the name of the root element or error message\n  // console.log(dom.getElementsByTagName('endTour'));\n\n\n\n  // Get Spanish translation from string\n  getTranslation(XMLtext, \"endTour\", \"sp\")\n  // console.log(XMLtext);\n\n\n  // e => setNumberOfSeconds(e.target.value)\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <input value={numberOfSeconds} onChange={handleChange} />\n        <button onClick={handleClick}>Click me to see the Spanish translation!</button>\n        {clicked &&\n          <span className={textVisibility ? 'visible' : 'invisible'}>{getTranslation(XMLtext, \"endTour\", \"sp\")}</span>}\n      </header>\n    </div >\n  );\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}