{"ast":null,"code":"var _jsxFileName = \"/Users/pmsheijmans/Projecten/fietslabyrinth/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport logo from './logo.png';\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport XMLData from './languages_all.xml';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // Read XML file and store it as a string\n  const [XMLtext, setXMLtext] = useState(\"\");\n  axios.get(XMLData, {\n    \"Content-Type\": \"application/xml; charset=utf-8\"\n  }).then(response => {\n    setXMLtext(response.data);\n  }); // Define variables/react hooks\n\n  const [clicked, setClicked] = useState(false);\n  const [numberOfSeconds, setNumberOfSeconds] = useState(0);\n  const [textVisibility, setVisibility] = useState(true); // Functions\n\n  function getTranslation(XMLtext, element, language) {\n    // WIP: Code that returns the correct element based on the inputted language.\n    return \"Fin de la ruta\";\n  }\n\n  function handleChange(e) {\n    setNumberOfSeconds(e.target.value);\n  }\n\n  function handleClick() {\n    setClicked(true);\n    setTimeout(() => {\n      setVisibility(false);\n    }, numberOfSeconds * 1000);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Bikelabyrinth logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: numberOfSeconds,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Click me to see the Spanish translation!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: clicked && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: textVisibility ? 'visible' : 'invisible',\n        children: getTranslation(XMLtext, \"endTour\", \"sp\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"QdYgLHaxHVtbFK4MFilpkb9LD9c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/pmsheijmans/Projecten/fietslabyrinth/src/App.js"],"names":["logo","axios","React","useState","XMLData","App","XMLtext","setXMLtext","get","then","response","data","clicked","setClicked","numberOfSeconds","setNumberOfSeconds","textVisibility","setVisibility","getTranslation","element","language","handleChange","e","target","value","handleClick","setTimeout"],"mappings":";;;AACA,OAAO,WAAP;AACA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,qBAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;AACAF,EAAAA,KAAK,CAACO,GAAN,CAAUJ,OAAV,EAAmB;AACjB,oBAAgB;AADC,GAAnB,EAGGK,IAHH,CAGSC,QAAD,IAAc;AAClBH,IAAAA,UAAU,CAACG,QAAQ,CAACC,IAAV,CAAV;AACD,GALH,EAJa,CAWb;;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACW,eAAD,EAAkBC,kBAAlB,IAAwCZ,QAAQ,CAAC,CAAD,CAAtD;AACA,QAAM,CAACa,cAAD,EAAiBC,aAAjB,IAAkCd,QAAQ,CAAC,IAAD,CAAhD,CAda,CAgBb;;AACA,WAASe,cAAT,CAAwBZ,OAAxB,EAAiCa,OAAjC,EAA0CC,QAA1C,EAAoD;AAClD;AACA,WAAO,gBAAP;AACD;;AAED,WAASC,YAAT,CAAsBC,CAAtB,EAAyB;AACvBP,IAAAA,kBAAkB,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB;AACD;;AAED,WAASC,WAAT,GAAuB;AACrBZ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAa,IAAAA,UAAU,CAAC,MAAM;AAAET,MAAAA,aAAa,CAAC,KAAD,CAAb;AAAuB,KAAhC,EAAkCH,eAAe,GAAG,IAApD,CAAV;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,6BACE;AAAK,QAAA,GAAG,EAAEd,IAAV;AAAgB,QAAA,GAAG,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAO,MAAA,KAAK,EAAEc,eAAd;AAA+B,MAAA,QAAQ,EAAEO;AAAzC;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAQ,MAAA,OAAO,EAAEI,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAA,gBACGb,OAAO,iBACN;AAAM,QAAA,SAAS,EAAEI,cAAc,GAAG,SAAH,GAAe,WAA9C;AAAA,kBAA4DE,cAAc,CAACZ,OAAD,EAAU,SAAV,EAAqB,IAArB;AAA1E;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GA7CQD,G;;KAAAA,G;AA+CT,eAAeA,GAAf","sourcesContent":["\nimport './App.css';\nimport logo from './logo.png';\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport XMLData from './languages_all.xml';\n\nfunction App() {\n\n  // Read XML file and store it as a string\n  const [XMLtext, setXMLtext] = useState(\"\");\n  axios.get(XMLData, {\n    \"Content-Type\": \"application/xml; charset=utf-8\"\n  })\n    .then((response) => {\n      setXMLtext(response.data)\n    });\n\n  // Define variables/react hooks\n  const [clicked, setClicked] = useState(false);\n  const [numberOfSeconds, setNumberOfSeconds] = useState(0);\n  const [textVisibility, setVisibility] = useState(true);\n\n  // Functions\n  function getTranslation(XMLtext, element, language) {\n    // WIP: Code that returns the correct element based on the inputted language.\n    return \"Fin de la ruta\";\n  }\n\n  function handleChange(e) {\n    setNumberOfSeconds(e.target.value);\n  }\n\n  function handleClick() {\n    setClicked(true)\n    setTimeout(() => { setVisibility(false); }, numberOfSeconds * 1000);\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} alt=\"Bikelabyrinth logo\" />\n\n      </header>\n      <input value={numberOfSeconds} onChange={handleChange} />\n      <button onClick={handleClick}>Click me to see the Spanish translation!</button>\n      <div>\n        {clicked &&\n          <span className={textVisibility ? 'visible' : 'invisible'}>{getTranslation(XMLtext, \"endTour\", \"sp\")}</span>}\n      </div>\n    </div >\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}